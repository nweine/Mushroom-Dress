#include <heartRate.h>
#include <MAX30105.h>
#include <spo2_algorithm.h>

#include <PalatisSoftPWM.h>

#include <Wire.h>


SOFTPWM_DEFINE_CHANNEL(0, DDRD, PORTD, PORTD1);  //Arduino pin 1 - this pin is used for Serial so you will be unable to use Serial in your sketch if you use it for PWM
SOFTPWM_DEFINE_CHANNEL(1, DDRD, PORTD, PORTD2);  //Arduino pin 2
SOFTPWM_DEFINE_CHANNEL(2, DDRD, PORTD, PORTD3);  //Arduino pin 3
SOFTPWM_DEFINE_CHANNEL(3, DDRD, PORTD, PORTD4);  //Arduino pin 4
SOFTPWM_DEFINE_CHANNEL(4, DDRD, PORTD, PORTD5);  //Arduino pin 5
SOFTPWM_DEFINE_CHANNEL(5, DDRD, PORTD, PORTD6);  //Arduino pin 6
SOFTPWM_DEFINE_CHANNEL(6, DDRD, PORTD, PORTD7);  //Arduino pin 7
SOFTPWM_DEFINE_CHANNEL(7, DDRB, PORTB, PORTB0);  //Arduino pin 8
SOFTPWM_DEFINE_CHANNEL(8, DDRB, PORTB, PORTB1);  //Arduino pin 9


SOFTPWM_DEFINE_OBJECT(10);



int firstLedPin = 0; //the first led to light up in a pulse


byte values[10];
byte ledValueDelta = 1;
byte ledDefualtAnimValue = 0;
bool pulseTrigger = false;

unsigned long prevLightTime;
unsigned long pulseDelay = 75;//the time to pass between each LED turning on

int nextLedToGoOn;

bool fingerOnSensor;
long unblockedValue;
////////



MAX30105 particleSensor;


void setup() {
  //Serial.begin(9600);
  nextLedToGoOn = firstLedPin;

  PalatisSoftPWM.begin(60);  // begin with 60 Hz PWM frequency

  //initalize values. all at 0
  for (int i = 0; i < sizeof(values) - 1 ; i++) {
    values[i] = 0;
    PalatisSoftPWM.set(i, values[i]);
  }

  // Initialize sensor
  if (!particleSensor.begin(Wire, I2C_SPEED_FAST)) //Use default I2C port, 400kHz speed
  {
    Serial.println("MAX30105 was not found. Please check wiring/power. ");
    while (1);
  }
  Serial.println("Place your index finger on the sensor with steady pressure.");

  particleSensor.setup(); //Configure sensor with default settings
  particleSensor.setPulseAmplitudeRed(0x0A); //Turn Red LED to low to indicate sensor is running
  particleSensor.setPulseAmplitudeGreen(0); //Turn off Green LED


  //Take an average of IR readings at power up
  unblockedValue = 0;
  for (byte x = 0 ; x < 32 ; x++)
  {
    unblockedValue += particleSensor.getIR(); //Read the IR value
  }
  unblockedValue /= 32;

}

void loop() {

  long irValue = particleSensor.getIR();
  long currentDelta = irValue - unblockedValue;
  if (irValue < 50000)
  {
    fingerOnSensor = false;
  } else {

    fingerOnSensor = true;
  }

  if (fingerOnSensor) {

    //decay all lights, if negative - leave at 0
    for (int i = 0; i < sizeof(values) - 1 ; i++) {
      values [i] = max (0, (values[i] - 5));
    }


    //set first light to max, set prevlight time to millis, set next light to ++;

    if (nextLedToGoOn <= sizeof(values) - 1) {
      unsigned long timeElapsed = millis() - prevLightTime;

      if (timeElapsed > pulseDelay) {
        values [nextLedToGoOn] = 255;
        nextLedToGoOn++;
        prevLightTime = millis();
      }

    }



    if (checkForBeat(irValue) == true)
    {

      nextLedToGoOn = firstLedPin;
    }



  } else {
    if (ledDefualtAnimValue <= 0) {
      ledValueDelta = 1;
    }
    if (ledDefualtAnimValue >= 255) {
      ledValueDelta = -1;
    }

    ledDefualtAnimValue = ledDefualtAnimValue + ledValueDelta;

    for (int i = 0; i < sizeof(values) - 1 ; i++) {
      values [i] = ledDefualtAnimValue;
    }


  }

  assignLightValues();
  delay(1);
}

void assignLightValues() {
  for (int i = firstLedPin; i < sizeof(values) - 1 ; i++) {
    PalatisSoftPWM.set(i, values[i]);
  }
}
